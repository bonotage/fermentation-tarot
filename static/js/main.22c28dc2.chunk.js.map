{"version":3,"sources":["App.js","index.js"],"names":["tarots_json","require","shuffle","tarots","slice","length","App","useState","openedCard","setOpenedCard","className","rel","href","crossorigin","Array","map","e","i","tarot","index","isFlipped","onClick","prevState","item","idx","flipCard","src","process","id","alt","name","width","message","class","viewBox","fill","d","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"i8DAGMA,EAAcC,EAAQ,IACdA,EAAQ,GAGtBC,CAFeF,GAMf,IAAMG,EAASH,EAAYI,MAAMJ,EAAYK,OAAS,GAUvC,SAASC,IAEtB,MAAoCC,mBAAS,EAAC,GAAO,GAAO,GAAO,IAAnE,mBAAOC,EAAP,KAAmBC,EAAnB,KA2CA,OACE,sBAAKC,UAAU,MAAf,UACE,sBAAMC,IAAI,aAAaC,KAAK,iCAC5B,sBAAMD,IAAI,aAAaC,KAAK,4BAA4BC,aAAW,IACnE,sBACED,KAAK,qHACLD,IAAI,eAGL,YAAIG,MAAM,MAAMC,KAAI,SAACC,EAAGC,GAAJ,OACnB,qBAAKP,UAAU,QAAYO,MAa7B,qBAAKP,UAAU,aAAf,mCAEA,qBAAKA,UAAU,oBAAf,SACE,qBAAKA,UAAU,QAAf,SACGP,EAAOY,KAAI,SAACG,EAAOC,GAQlB,IAAIC,EAAYZ,EAAWW,GAE3B,OACE,qBACET,UAAS,qBAAgBU,EAAY,UAAY,GAAxC,KAETC,QAAS,kBA/DvB,SAAkBF,GAChBV,GAAc,SAACa,GAAD,OACZA,EAAUP,KAAI,SAACQ,EAAMC,GAAP,OAAgBA,IAAQL,GAASI,EAAOA,QA6D7BE,CAASN,IAH1B,SAKE,sBAAKT,UAAU,QAAf,UACE,qBAAKA,UAAU,QAAf,SACE,qBAEEgB,IAAG,UAAKC,sBAAL,wBAA2CT,EAAMU,GAAjD,QAEHC,IAAG,UAAKX,EAAMY,KAAX,YAAmBZ,EAAMU,IAC5BG,MAAM,UAGV,qBAAKrB,UAAU,OAAf,SACE,sBAAKA,UAAU,cAAf,iBACM,uBADN,IACa,uBACVQ,EAAMc,QAFT,IAEkB,uBAFlB,IAEyB,uBAFzB,eAdCb,UA0Bf,qBAAKT,UAAU,oBAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,sBAAKuB,MAAM,YAAX,UACE,qBAAKA,MAAM,cACX,qBAAKA,MAAM,iBACX,qBAAKA,MAAM,iBACX,qBAAKA,MAAM,gBACX,qBAAKA,MAAM,gBACX,qBAAKA,MAAM,oBAGb,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,cACX,qBAAKA,MAAM,iBACX,qBAAKA,MAAM,iBACX,qBAAKA,MAAM,gBACX,qBAAKA,MAAM,gBACX,qBAAKA,MAAM,yBAKjB,qBAAKA,MAAM,aAAX,SAME,qBAAKC,QAAQ,eAAb,SACE,sBACEC,KAAK,OACL,eAAa,IACbC,EAAE,4SAKR,4DCnKNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACjC,EAAD,MAEFkC,SAASC,eAAe,W","file":"static/js/main.22c28dc2.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./styles.scss\";\n\nconst tarots_json = require(\"./tarots.json\");\nvar shuffle = require(\"shuffle-array\"),\n  collection = tarots_json;\n\nshuffle(collection);\n// console.log(collection);\n\n// console.log(tarots_json.slice(tarots_json.length - 3));\nconst tarots = tarots_json.slice(tarots_json.length - 3);\n// import tarot1 from \"./tarot1.jpg\";\n\n// references\n// flame: https://codepen.io/dazulu/pen/fGFyj\n//https://freefrontend.com/css-snow-effects/\n\n// const url = \"https://pokeres.bastionbot.org/images/pokemon\";\n// const url = \"https://assets.pokemon.com/assets/cms2/img/pokedex/full/00\";\n\nexport default function App() {\n  // const [openedCard, setOpenedCard] = useState([]);\n  const [openedCard, setOpenedCard] = useState([false, false, false, false]);\n  // const [matched, setMatched] = useState([]);\n\n  // const pokemons = [\n  //   { id: 1, name: \"balbasaur\" },\n  //   { id: 8, name: \"wartotle\" },\n  //   { id: 9, name: \"blastoise\" },\n  //   { id: 6, name: \"charizard\" },\n  // ];\n\n  // const tarots = [\n  //   { id: 1, name: \"cups\" },\n  //   { id: 2, name: \"wands\" },\n  //   { id: 3, name: \"pentacles\" },\n  //   // { id: 4, name: \"swords\" },\n  // ];\n\n  //currently there are 4 pokemons but we need the pair\n\n  // const pairOfPokemons = [...pokemons, ...pokemons];\n\n  function flipCard(index) {\n    setOpenedCard((prevState) =>\n      prevState.map((item, idx) => (idx === index ? !item : item))\n    );\n    // setOpenedCard((opened) => [...opened, index]);\n    // cardFlipStatus[index] = !cardFlipStatus[index];\n    // console.log(cardFlipStatus[index]);\n  }\n\n  // useEffect(() => {\n  //   if (openedCard < 2) return;\n\n  //   const firstMatched = pairOfPokemons[openedCard[0]];\n  //   const secondMatched = pairOfPokemons[openedCard[1]];\n\n  //   if (secondMatched && firstMatched.id === secondMatched.id) {\n  //     setMatched([...matched, firstMatched.id]);\n  //   }\n\n  //   if (openedCard.length === 2) setTimeout(() => setOpenedCard([]), 1000);\n  // }, [openedCard]);\n\n  return (\n    <div className=\"App\">\n      <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n      <link\n        href=\"https://fonts.googleapis.com/css2?family=Annie+Use+Your+Telescope&family=Open+Sans+Condensed:wght@300&display=swap\"\n        rel=\"stylesheet\"\n      ></link>\n\n      {[...Array(150)].map((e, i) => (\n        <div className=\"snow\" key={i}></div>\n      ))}\n\n      {/* <div className=\"wrapper\">\n          <div className=\"snow layer1 a\"></div>\n          <div className=\"snow layer1\"></div>\n          <div className=\"snow layer2 a\"></div>\n          <div className=\"snow layer2\"></div>\n          <div className=\"snow layer3 a\"></div>\n          <div className=\"snow layer3\"></div>\n          <div className=\"text-bg\"></div>\n        </div> */}\n\n      <div className=\"title-text\">Reach for the past...</div>\n      {/* <div className=\"snow\"></div> */}\n      <div className=\"content-container\">\n        <div className=\"cards\">\n          {tarots.map((tarot, index) => {\n            //lets flip the card\n\n            // let isFlipped = false;\n\n            // if (openedCard.includes(index)) isFlipped = true;\n            // if (matched.includes(pokemon.id)) isFlipped = true;\n            // console.log(`../public/assets/tarot${pokemon.id}.jpg`);\n            let isFlipped = openedCard[index];\n\n            return (\n              <div\n                className={`tarot-card ${isFlipped ? \"flipped\" : \"\"} `}\n                key={index}\n                onClick={() => flipCard(index)}\n              >\n                <div className=\"inner\">\n                  <div className=\"front\">\n                    <img\n                      // src={`${tarot1}`}\n                      src={`${process.env.PUBLIC_URL}/assets/tarot${tarot.id}.jpg`}\n                      // src={`${url}${pokemon.id}.png`}\n                      alt={`${tarot.name} ${tarot.id}`}\n                      width=\"200\"\n                    />\n                  </div>\n                  <div className=\"back\">\n                    <div className=\"message-box\">\n                      ~*~ <br /> <br />\n                      {tarot.message} <br /> <br />\n                      ~*~\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className=\"content-container\">\n        <div className=\"flame-container\">\n          <div class=\"container\">\n            <div class=\"red flame\"></div>\n            <div class=\"orange flame\"></div>\n            <div class=\"yellow flame\"></div>\n            <div class=\"white flame\"></div>\n            <div class=\"blue circle\"></div>\n            <div class=\"black circle\"></div>\n          </div>\n\n          <div class=\"container\">\n            <div class=\"red flame\"></div>\n            <div class=\"orange flame\"></div>\n            <div class=\"yellow flame\"></div>\n            <div class=\"white flame\"></div>\n            <div class=\"blue circle\"></div>\n            <div class=\"black circle\"></div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"curved-div\">\n        {/* <img\n          src={`${process.env.PUBLIC_URL}/assets/left-foot.png`}\n          alt=\"left foot\"\n          width=\"100\"\n        /> */}\n        <svg viewBox=\"0 0 1440 319\">\n          <path\n            fill=\"#fff\"\n            fill-opacity=\"1\"\n            d=\"M0,32L48,80C96,128,192,224,288,224C384,224,480,128,576,90.7C672,53,768,75,864,96C960,117,1056,139,1152,149.3C1248,160,1344,160,1392,160L1440,160L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"\n          ></path>\n        </svg>\n      </div>\n\n      <footer> Fermentation Tarot</footer>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}